# This is a basic workflow to help you get started with Actions

name: App Test CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_minpaku
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Cache gradle wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      # Runs a single command using the runners shell
      - name: Run Unit Tests
        run: ./gradlew test --tests com.taurin.minpaku.Unit.\*Test
      - name: Create Coverage Report
        run: ./gradlew jacocoTestReport
      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          directory: ./build/reports/jacoco/test/
          token: ${{ secrets.CODECOV_TOKEN }}

